version: "3.7"

services:
  api:
    image: python-app
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 5000:5000
    environment:
      DEBUG_METRICS: "true"
      FLASK_ENV: development
    labels:
      traefik.enable: true
      traefik.http.routers.flask.rule: PathPrefix(`/api`)
      traefik.http.middlewares.strip-api.stripprefix.prefixes: /api
      traefik.http.services.flask.loadbalancer.server.port: 5000
      traefik.http.routers.flak.middlewares: strip-api@docker

  app:
    image: vtcs2304s19/blabber-client
    labels:
      traefik.http.routers.react.rule: PathPrefix(`/`)
      traefik.http.services.react.loadbalancer.server.port: 80

  mongo:
    image: mongo
    command: [--auth]
    environment:
      HOSTNAME_FILE: /run/secrets/db_hostname
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/db_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - mongo-data:/data/db
    secrets:
      - db_hostname
      - db_username
      - db_password

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - 3000:3000

  proxy:
    image: traefik:v2.1
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

secrets:
  db_hostname:
    file: db_hostname.txt
  db_username:
    file: db_username.txt
  db_password:
    file: db_password.txt

volumes:
  mongo-data:
  grafana-storage:
